@using System.Threading.Tasks
@using Microsoft.Extensions.OptionsModel
@inject IOptions<AppSettings> AppSettings
@{
    ViewData["Title"] = "Home Page";
}

@section header {
    @await Html.PartialAsync("_Header", null, null)
}


<div class="content">

    <div id="radar-scanning">
        <div class="loader-radar">
            <span></span>
            <span></span>
            <span></span>
        </div>
        <i></i>
    </div>

    <div class="file-upload" style="display: none">
        <input id="fileupload" type="file" name="files" data-url="api/upload" multiple class="file-input">Choose File
    </div>

    <div class="box box--centered mb10 hidden">
        <div role="button" tabindex="0" aria-label="Uploads" class="upload" data-progressbar-label="Uploading item..."></div>
    </div>

    <div class="status text-center">
        Socket Connection: <span id="con-status">disconnected</span>
    </div>

    <div>
        <h2>Photos</h2>
        <div class="grid mb20" id="photos-grid">
            <p class="empty-msg">No photos currently available</p>
        </div>
    </div>

    <div class="messages" style="display: none;">
    </div>
</div>


@section scripts
{
    <script type="text/javascript">
        $(function () {

            var radarText = $('#radar-scanning');
            radarText.find('i').text('Connecting to server...');

            $.connection.hub.logging = true;
            var photosHub = $.connection.photos;

            var g = new window.gwab(this, {
                hub: photosHub,
                upload: {
                    effectEl: $('.upload'),
                    inputFileUpload: $('#fileupload')
                },
                assetsUrl: '@AppSettings.Value.AssetsUrl',
                photos: {
                    tpl: $('#tpl-photo'),
                    grid: $('#photos-grid')
                },
                faces: {
                    tpl: $('#tpl-face'),
                    grid: $('#faces-grid')
                },
                reset: $('#btn-clear')
            });

            photosHub.client.addPhoto = function (photo) {
                console.log(photo);
                g.addPhoto(photo);
            }

            photosHub.client.addFaces = function (faces) {
                g.addFaces(faces);
            }

            var messages = $('.messages');
            photosHub.client.notify = function (msg) {
                messages.append(['<span>', msg, '</span>'].join(''));
                console.log(msg);
            }

            console.log('Request to connect');
            $.connection.hub.start().done(function () {
                $('.box').toggleClass('hidden');
                photosHub.server.getPhotos();

                radarText.hide();
                $('#con-status').text("Connected");
                console.log('connected');
            });

            $.connection.hub.disconnected(function () {
                $('#con-status').text("disconnected");
                setTimeout(function () {
                    $.connection.hub.start({ waitForPageLoad: false });
                }, 5000); // Restart connection after 5 seconds.
            });
        });
    </script>
}
}

